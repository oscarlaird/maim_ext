/******/ (() => { // webpackBootstrap
/*!***************************!*\
  !*** ./src/background.js ***!
  \***************************/
chrome.runtime.onInstalled.addListener(function () {
  console.log("Extension was installed!");
});
var window_type_map = new Map(); // Maps window IDs to their type ('recording' or 'agent')

chrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {
  console.log("Received message:", message);
  console.log("From sender:", sender);

  // Handle specific message types
  if (message.type === "CREATE_RECORDING_WINDOW" || message.type === "CREATE_AGENT_RUN_WINDOW") {
    console.log("Creating new window for screen recording");
    // chrome.windows.create({
    //     focused: true,
    //     type: 'normal'
    // }, (window) => {
    //     console.log("New window created for screen recording:", window.id);
    // });
    chrome.windows.create({
      focused: true,
      type: 'normal'
    }, function (window) {
      console.log("New window created:", window.id);
      window_type_map.set(window.id, message.type);
      // Open the side panel in the newly created window
      chrome.sidePanel.open({
        windowId: window.id
      }, function () {
        if (chrome.runtime.lastError) {
          console.error("Failed to open side panel:", chrome.runtime.lastError);
        } else {
          console.log("Side panel opened in new window");
        }
      });
    });
  }
});

// Get the window ID of the current tab
chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
  if (request.type === "get-window-id") {
    var tabId = sender.tab.id;
    chrome.tabs.get(tabId, function (tab) {
      sendResponse({
        windowId: tab.windowId
      });
    });
    return true; // indicates async response
  }
});
chrome.sidePanel.setPanelBehavior({
  openPanelOnActionClick: true
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDQyxXQUFXLENBQUNDLFdBQVcsQ0FBQyxZQUFNO0VBQ3pDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQztBQUMzQyxDQUFDLENBQUM7QUFFRixJQUFJQyxlQUFlLEdBQUcsSUFBSUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDOztBQUVqQ1AsTUFBTSxDQUFDQyxPQUFPLENBQUNPLFNBQVMsQ0FBQ0wsV0FBVyxDQUFDLFVBQUNNLE9BQU8sRUFBRUMsTUFBTSxFQUFFQyxZQUFZLEVBQUs7RUFDcEVQLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixFQUFFSSxPQUFPLENBQUM7RUFDekNMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGNBQWMsRUFBRUssTUFBTSxDQUFDOztFQUVuQztFQUNBLElBQUlELE9BQU8sQ0FBQ0csSUFBSSxLQUFLLHlCQUF5QixJQUFJSCxPQUFPLENBQUNHLElBQUksS0FBSyx5QkFBeUIsRUFBRTtJQUMxRlIsT0FBTyxDQUFDQyxHQUFHLENBQUMsMENBQTBDLENBQUM7SUFDdkQ7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0FMLE1BQU0sQ0FBQ2EsT0FBTyxDQUFDQyxNQUFNLENBQUM7TUFDbEJDLE9BQU8sRUFBRSxJQUFJO01BQ2JILElBQUksRUFBRTtJQUNWLENBQUMsRUFBRSxVQUFDSSxNQUFNLEVBQUs7TUFDWFosT0FBTyxDQUFDQyxHQUFHLENBQUMscUJBQXFCLEVBQUVXLE1BQU0sQ0FBQ0MsRUFBRSxDQUFDO01BQzdDWCxlQUFlLENBQUNZLEdBQUcsQ0FBQ0YsTUFBTSxDQUFDQyxFQUFFLEVBQUVSLE9BQU8sQ0FBQ0csSUFBSSxDQUFDO01BQzVDO01BQ0FaLE1BQU0sQ0FBQ21CLFNBQVMsQ0FBQ0MsSUFBSSxDQUFDO1FBQUVDLFFBQVEsRUFBRUwsTUFBTSxDQUFDQztNQUFHLENBQUMsRUFBRSxZQUFNO1FBQ2pELElBQUlqQixNQUFNLENBQUNDLE9BQU8sQ0FBQ3FCLFNBQVMsRUFBRTtVQUMxQmxCLE9BQU8sQ0FBQ21CLEtBQUssQ0FBQyw0QkFBNEIsRUFBRXZCLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDcUIsU0FBUyxDQUFDO1FBQ3pFLENBQUMsTUFBTTtVQUNIbEIsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUNBQWlDLENBQUM7UUFDbEQ7TUFDSixDQUFDLENBQUM7SUFDTixDQUFDLENBQUM7RUFDTjtBQUNKLENBQUMsQ0FBQzs7QUFFRjtBQUNBTCxNQUFNLENBQUNDLE9BQU8sQ0FBQ08sU0FBUyxDQUFDTCxXQUFXLENBQUMsVUFBQ3FCLE9BQU8sRUFBRWQsTUFBTSxFQUFFQyxZQUFZLEVBQUs7RUFDcEUsSUFBSWEsT0FBTyxDQUFDWixJQUFJLEtBQUssZUFBZSxFQUFFO0lBQ2xDLElBQU1hLEtBQUssR0FBR2YsTUFBTSxDQUFDZ0IsR0FBRyxDQUFDVCxFQUFFO0lBQzNCakIsTUFBTSxDQUFDMkIsSUFBSSxDQUFDQyxHQUFHLENBQUNILEtBQUssRUFBRSxVQUFDQyxHQUFHLEVBQUs7TUFDNUJmLFlBQVksQ0FBQztRQUFFVSxRQUFRLEVBQUVLLEdBQUcsQ0FBQ0w7TUFBUyxDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDO0lBQ0YsT0FBTyxJQUFJLENBQUMsQ0FBQztFQUNqQjtBQUNKLENBQUMsQ0FBQztBQUdGckIsTUFBTSxDQUFDbUIsU0FBUyxDQUFDVSxnQkFBZ0IsQ0FBQztFQUFFQyxzQkFBc0IsRUFBRTtBQUFLLENBQUMsQ0FBQyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtY2hyb21lLWV4dGVuc2lvbi8uL3NyYy9iYWNrZ3JvdW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNocm9tZS5ydW50aW1lLm9uSW5zdGFsbGVkLmFkZExpc3RlbmVyKCgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIkV4dGVuc2lvbiB3YXMgaW5zdGFsbGVkIVwiKTtcbn0pO1xuXG5sZXQgd2luZG93X3R5cGVfbWFwID0gbmV3IE1hcCgpOyAvLyBNYXBzIHdpbmRvdyBJRHMgdG8gdGhlaXIgdHlwZSAoJ3JlY29yZGluZycgb3IgJ2FnZW50JylcblxuY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKChtZXNzYWdlLCBzZW5kZXIsIHNlbmRSZXNwb25zZSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiUmVjZWl2ZWQgbWVzc2FnZTpcIiwgbWVzc2FnZSk7XG4gICAgY29uc29sZS5sb2coXCJGcm9tIHNlbmRlcjpcIiwgc2VuZGVyKTtcblxuICAgIC8vIEhhbmRsZSBzcGVjaWZpYyBtZXNzYWdlIHR5cGVzXG4gICAgaWYgKG1lc3NhZ2UudHlwZSA9PT0gXCJDUkVBVEVfUkVDT1JESU5HX1dJTkRPV1wiIHx8IG1lc3NhZ2UudHlwZSA9PT0gXCJDUkVBVEVfQUdFTlRfUlVOX1dJTkRPV1wiKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ3JlYXRpbmcgbmV3IHdpbmRvdyBmb3Igc2NyZWVuIHJlY29yZGluZ1wiKTtcbiAgICAgICAgLy8gY2hyb21lLndpbmRvd3MuY3JlYXRlKHtcbiAgICAgICAgLy8gICAgIGZvY3VzZWQ6IHRydWUsXG4gICAgICAgIC8vICAgICB0eXBlOiAnbm9ybWFsJ1xuICAgICAgICAvLyB9LCAod2luZG93KSA9PiB7XG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhcIk5ldyB3aW5kb3cgY3JlYXRlZCBmb3Igc2NyZWVuIHJlY29yZGluZzpcIiwgd2luZG93LmlkKTtcbiAgICAgICAgLy8gfSk7XG4gICAgICAgIGNocm9tZS53aW5kb3dzLmNyZWF0ZSh7XG4gICAgICAgICAgICBmb2N1c2VkOiB0cnVlLFxuICAgICAgICAgICAgdHlwZTogJ25vcm1hbCdcbiAgICAgICAgfSwgKHdpbmRvdykgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJOZXcgd2luZG93IGNyZWF0ZWQ6XCIsIHdpbmRvdy5pZCk7XG4gICAgICAgICAgICB3aW5kb3dfdHlwZV9tYXAuc2V0KHdpbmRvdy5pZCwgbWVzc2FnZS50eXBlKTtcbiAgICAgICAgICAgIC8vIE9wZW4gdGhlIHNpZGUgcGFuZWwgaW4gdGhlIG5ld2x5IGNyZWF0ZWQgd2luZG93XG4gICAgICAgICAgICBjaHJvbWUuc2lkZVBhbmVsLm9wZW4oeyB3aW5kb3dJZDogd2luZG93LmlkIH0sICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gb3BlbiBzaWRlIHBhbmVsOlwiLCBjaHJvbWUucnVudGltZS5sYXN0RXJyb3IpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU2lkZSBwYW5lbCBvcGVuZWQgaW4gbmV3IHdpbmRvd1wiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufSk7XG5cbi8vIEdldCB0aGUgd2luZG93IElEIG9mIHRoZSBjdXJyZW50IHRhYlxuY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKChyZXF1ZXN0LCBzZW5kZXIsIHNlbmRSZXNwb25zZSkgPT4ge1xuICAgIGlmIChyZXF1ZXN0LnR5cGUgPT09IFwiZ2V0LXdpbmRvdy1pZFwiKSB7XG4gICAgICAgIGNvbnN0IHRhYklkID0gc2VuZGVyLnRhYi5pZDtcbiAgICAgICAgY2hyb21lLnRhYnMuZ2V0KHRhYklkLCAodGFiKSA9PiB7XG4gICAgICAgICAgICBzZW5kUmVzcG9uc2UoeyB3aW5kb3dJZDogdGFiLndpbmRvd0lkIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRydWU7IC8vIGluZGljYXRlcyBhc3luYyByZXNwb25zZVxuICAgIH1cbn0pO1xuXG5cbmNocm9tZS5zaWRlUGFuZWwuc2V0UGFuZWxCZWhhdmlvcih7IG9wZW5QYW5lbE9uQWN0aW9uQ2xpY2s6IHRydWUgfSk7Il0sIm5hbWVzIjpbImNocm9tZSIsInJ1bnRpbWUiLCJvbkluc3RhbGxlZCIsImFkZExpc3RlbmVyIiwiY29uc29sZSIsImxvZyIsIndpbmRvd190eXBlX21hcCIsIk1hcCIsIm9uTWVzc2FnZSIsIm1lc3NhZ2UiLCJzZW5kZXIiLCJzZW5kUmVzcG9uc2UiLCJ0eXBlIiwid2luZG93cyIsImNyZWF0ZSIsImZvY3VzZWQiLCJ3aW5kb3ciLCJpZCIsInNldCIsInNpZGVQYW5lbCIsIm9wZW4iLCJ3aW5kb3dJZCIsImxhc3RFcnJvciIsImVycm9yIiwicmVxdWVzdCIsInRhYklkIiwidGFiIiwidGFicyIsImdldCIsInNldFBhbmVsQmVoYXZpb3IiLCJvcGVuUGFuZWxPbkFjdGlvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==