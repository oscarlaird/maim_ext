/******/ (() => { // webpackBootstrap
/*!***************************!*\
  !*** ./src/background.js ***!
  \***************************/
var window_type_map = new Map(); // Maps window IDs to their type ('recording' or 'agent')

chrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {
  // Handle specific message types
  if (message.type === "CREATE_RECORDING_WINDOW" || message.type === "CREATE_AGENT_RUN_WINDOW") {
    chrome.windows.create({
      focused: true,
      type: 'normal'
    }, function (window) {
      window_type_map.set(window.id, message.type);
      // Open the side panel in the newly created window
      chrome.sidePanel.open({
        windowId: window.id
      }, function () {
        if (chrome.runtime.lastError) {
          console.error("Failed to open side panel:", chrome.runtime.lastError);
        } else {
          console.log("Side panel opened in new window");
        }
      });
    });
  }
});

// Get the window ID of the current tab
chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
  if (request.type === "get-window-type") {
    console.log("Received message get-window-type:", request, "from sender:", sender, "with window id:", request.windowId);
    sendResponse({
      windowType: window_type_map.get(request.windowId)
    });
  }
});
chrome.sidePanel.setPanelBehavior({
  openPanelOnActionClick: true
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsZUFBZSxHQUFHLElBQUlDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7QUFFakNDLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDQyxTQUFTLENBQUNDLFdBQVcsQ0FBQyxVQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsWUFBWSxFQUFLO0VBQ3BFO0VBQ0EsSUFBSUYsT0FBTyxDQUFDRyxJQUFJLEtBQUsseUJBQXlCLElBQUlILE9BQU8sQ0FBQ0csSUFBSSxLQUFLLHlCQUF5QixFQUFFO0lBQzFGUCxNQUFNLENBQUNRLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDO01BQ2xCQyxPQUFPLEVBQUUsSUFBSTtNQUNiSCxJQUFJLEVBQUU7SUFDVixDQUFDLEVBQUUsVUFBQ0ksTUFBTSxFQUFLO01BQ1hiLGVBQWUsQ0FBQ2MsR0FBRyxDQUFDRCxNQUFNLENBQUNFLEVBQUUsRUFBRVQsT0FBTyxDQUFDRyxJQUFJLENBQUM7TUFDNUM7TUFDQVAsTUFBTSxDQUFDYyxTQUFTLENBQUNDLElBQUksQ0FBQztRQUFFQyxRQUFRLEVBQUVMLE1BQU0sQ0FBQ0U7TUFBRyxDQUFDLEVBQUUsWUFBTTtRQUNqRCxJQUFJYixNQUFNLENBQUNDLE9BQU8sQ0FBQ2dCLFNBQVMsRUFBRTtVQUMxQkMsT0FBTyxDQUFDQyxLQUFLLENBQUMsNEJBQTRCLEVBQUVuQixNQUFNLENBQUNDLE9BQU8sQ0FBQ2dCLFNBQVMsQ0FBQztRQUN6RSxDQUFDLE1BQU07VUFDSEMsT0FBTyxDQUFDRSxHQUFHLENBQUMsaUNBQWlDLENBQUM7UUFDbEQ7TUFDSixDQUFDLENBQUM7SUFDTixDQUFDLENBQUM7RUFDTjtBQUNKLENBQUMsQ0FBQzs7QUFFRjtBQUNBcEIsTUFBTSxDQUFDQyxPQUFPLENBQUNDLFNBQVMsQ0FBQ0MsV0FBVyxDQUFDLFVBQUNrQixPQUFPLEVBQUVoQixNQUFNLEVBQUVDLFlBQVksRUFBSztFQUNwRSxJQUFJZSxPQUFPLENBQUNkLElBQUksS0FBSyxpQkFBaUIsRUFBRTtJQUNwQ1csT0FBTyxDQUFDRSxHQUFHLENBQUMsbUNBQW1DLEVBQUVDLE9BQU8sRUFBRSxjQUFjLEVBQUVoQixNQUFNLEVBQUUsaUJBQWlCLEVBQUVnQixPQUFPLENBQUNMLFFBQVEsQ0FBQztJQUN0SFYsWUFBWSxDQUFDO01BQUVnQixVQUFVLEVBQUV4QixlQUFlLENBQUN5QixHQUFHLENBQUNGLE9BQU8sQ0FBQ0wsUUFBUTtJQUFFLENBQUMsQ0FBQztFQUN2RTtBQUNKLENBQUMsQ0FBQztBQUVGaEIsTUFBTSxDQUFDYyxTQUFTLENBQUNVLGdCQUFnQixDQUFDO0VBQUVDLHNCQUFzQixFQUFFO0FBQUssQ0FBQyxDQUFDLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1jaHJvbWUtZXh0ZW5zaW9uLy4vc3JjL2JhY2tncm91bmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IHdpbmRvd190eXBlX21hcCA9IG5ldyBNYXAoKTsgLy8gTWFwcyB3aW5kb3cgSURzIHRvIHRoZWlyIHR5cGUgKCdyZWNvcmRpbmcnIG9yICdhZ2VudCcpXG5cbmNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcigobWVzc2FnZSwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpID0+IHtcbiAgICAvLyBIYW5kbGUgc3BlY2lmaWMgbWVzc2FnZSB0eXBlc1xuICAgIGlmIChtZXNzYWdlLnR5cGUgPT09IFwiQ1JFQVRFX1JFQ09SRElOR19XSU5ET1dcIiB8fCBtZXNzYWdlLnR5cGUgPT09IFwiQ1JFQVRFX0FHRU5UX1JVTl9XSU5ET1dcIikge1xuICAgICAgICBjaHJvbWUud2luZG93cy5jcmVhdGUoe1xuICAgICAgICAgICAgZm9jdXNlZDogdHJ1ZSxcbiAgICAgICAgICAgIHR5cGU6ICdub3JtYWwnXG4gICAgICAgIH0sICh3aW5kb3cpID0+IHtcbiAgICAgICAgICAgIHdpbmRvd190eXBlX21hcC5zZXQod2luZG93LmlkLCBtZXNzYWdlLnR5cGUpO1xuICAgICAgICAgICAgLy8gT3BlbiB0aGUgc2lkZSBwYW5lbCBpbiB0aGUgbmV3bHkgY3JlYXRlZCB3aW5kb3dcbiAgICAgICAgICAgIGNocm9tZS5zaWRlUGFuZWwub3Blbih7IHdpbmRvd0lkOiB3aW5kb3cuaWQgfSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChjaHJvbWUucnVudGltZS5sYXN0RXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBvcGVuIHNpZGUgcGFuZWw6XCIsIGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTaWRlIHBhbmVsIG9wZW5lZCBpbiBuZXcgd2luZG93XCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG59KTtcblxuLy8gR2V0IHRoZSB3aW5kb3cgSUQgb2YgdGhlIGN1cnJlbnQgdGFiXG5jaHJvbWUucnVudGltZS5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoKHJlcXVlc3QsIHNlbmRlciwgc2VuZFJlc3BvbnNlKSA9PiB7XG4gICAgaWYgKHJlcXVlc3QudHlwZSA9PT0gXCJnZXQtd2luZG93LXR5cGVcIikge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlJlY2VpdmVkIG1lc3NhZ2UgZ2V0LXdpbmRvdy10eXBlOlwiLCByZXF1ZXN0LCBcImZyb20gc2VuZGVyOlwiLCBzZW5kZXIsIFwid2l0aCB3aW5kb3cgaWQ6XCIsIHJlcXVlc3Qud2luZG93SWQpO1xuICAgICAgICBzZW5kUmVzcG9uc2UoeyB3aW5kb3dUeXBlOiB3aW5kb3dfdHlwZV9tYXAuZ2V0KHJlcXVlc3Qud2luZG93SWQpIH0pO1xuICAgIH1cbn0pO1xuXG5jaHJvbWUuc2lkZVBhbmVsLnNldFBhbmVsQmVoYXZpb3IoeyBvcGVuUGFuZWxPbkFjdGlvbkNsaWNrOiB0cnVlIH0pOyJdLCJuYW1lcyI6WyJ3aW5kb3dfdHlwZV9tYXAiLCJNYXAiLCJjaHJvbWUiLCJydW50aW1lIiwib25NZXNzYWdlIiwiYWRkTGlzdGVuZXIiLCJtZXNzYWdlIiwic2VuZGVyIiwic2VuZFJlc3BvbnNlIiwidHlwZSIsIndpbmRvd3MiLCJjcmVhdGUiLCJmb2N1c2VkIiwid2luZG93Iiwic2V0IiwiaWQiLCJzaWRlUGFuZWwiLCJvcGVuIiwid2luZG93SWQiLCJsYXN0RXJyb3IiLCJjb25zb2xlIiwiZXJyb3IiLCJsb2ciLCJyZXF1ZXN0Iiwid2luZG93VHlwZSIsImdldCIsInNldFBhbmVsQmVoYXZpb3IiLCJvcGVuUGFuZWxPbkFjdGlvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==